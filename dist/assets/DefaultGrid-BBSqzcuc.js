import{a1 as E,E as k,o as c,j as N,k as H,a0 as m,a7 as M,ad as g,J as D,a8 as P,H as w,K as C}from"./index-DohwXdzQ.js";const y=async(e,t)=>{for(;e.looping;){e.looping&&!e.openNodes.length&&e.openNodes.push(e.grid[e.startCoordinate[1]][e.startCoordinate[0]]);const i=e.openNodes[0];if(i.isVisited=!0,e.openNodes.shift(),await t.checkNode(i,t.upSideCoordinate(i)),await t.checkNode(i,t.downSideCoordinate(i)),await t.checkNode(i,t.upRightSideCoordinate(i),!0),await t.checkNode(i,t.downLeftSideCoordinate(i),!0),await t.checkNode(i,t.rightSideCoordinate(i)),await t.checkNode(i,t.leftSideCoordinate(i)),await t.checkNode(i,t.downRightSideCoordinate(i),!0),await t.checkNode(i,t.upLeftSideCoordinate(i),!0),e.openNodes.length||(e.looping=!1),e.shortestPathFound){const s=e.grid[e.foundedEndNode[1]][e.foundedEndNode[0]];s.isVisited=!0,t.visualizePath(s),e.openNodes=[]}}},L=e=>{e.grid.forEach(t=>{t.forEach(i=>{let s=0;s+=Math.abs(e.endCoordinate[0]-i.coordinate[0]),s+=Math.abs(e.endCoordinate[1]-i.coordinate[1]),i.hWeight=s*14})})},R=async(e,t)=>{await L(e),await y(e,t)},f=e=>new Promise(t=>setTimeout(t,e)),x=async(e,t)=>{const i=t[0]-1,s=t[1]-1;for(const o of e[0])o.isWall=!0,await f(10);for(let o=0;o<s;o++){const a=e[o][i];a.isWall=!0,await f(10)}for(let o=i;o>=0;o--){const a=e[s][o];a.isWall=!0,await f(10)}for(let o=s;o>=0;o--){const a=e[o][0];a.isWall=!0,await f(10)}},A=async(e,t)=>{let i=1,s=2;const o=t[0]-1,a=t[1]-1;let l=!0,d=!0;for(;l;){s+2>=a&&(l=!1);const h=e[s];for(d=!0,i=1;d;){if(i>=o){d=!1;break}let r=Math.ceil(Math.random()*6)+1;i+r>o&&(r=o-i);for(let p=i;p<=i+r;p++){const v=h[p];v.isWall=!0,await f(10)}e[s+1][i+r].isWall=!0;const n=i+Math.floor(Math.random()*(r-1));e[s-1][n].isWall?e[s+1][n-1].isWall?e[s+1][n+1].isWall||(h[n+1].isWall=!1):h[n-1].isWall=!1:h[n].isWall=!1,await f(10),i+=r+1}s+=2}},G=async(e,t)=>{const i=t[0]-1,s=t[1]-1,o=e[0][0];o.isWall=!1,o.isStartNode=!0,o.weight=0,e[0][1].isWall=!1,e[1][0].isWall=!1,e[1][1].isWall=!1;const a=[];for(let h=s;h>s-2;h--)for(let r=1;r<i;r++){const n=e[h][r];n.isWall||a.push(n)}const l=Math.floor(Math.random()*a.length),d=a[l];return d.isWall=!1,d.isEndNode=!0,{startCoordinate:[0,0],endCoordinate:d.coordinate}},Y=async(e,t)=>{for(const s of e)for(const o of s)o.isStartNode=!1,o.isEndNode=!1,o.isWall=!1,o.isWeightNode=!1,o.isVisited=!1,o.isPath=!1,o.weight=1e6,o.parentNode=[0,0];await x(e,t),await A(e,t);const i=await G(e,t);return{startCoordinate:i.startCoordinate,endCoordinate:i.endCoordinate}},u=1e6;let S=[5,5],W=[20,5];const F={dijkstraStartAlgorithm:y,aStarStartAlgorithm:R},X={props:{algorithm:{type:String,default:"dijkstra"}},data(){return{grid:[],gridWidth:50,gridHeight:15,nodeDimension:30,distanceWeight:10,diagonalDistanceWeight:15,nodeTemplate:{coordinate:[0,0],coordinateX:0,coordinateY:0,weight:u,hWeight:0,gWeight:0,parentNode:[0,0],isStartNode:!1,isEndNode:!1,isVisited:!1,isPath:!1,isWeightNode:!1,isWall:!1},startCoordinate:S,endCoordinate:W,openNodes:[],looping:!1,isLeftMouseDown:!1,isRightMouseDown:!1,mouseHoldedNode:null,canSearchDiagonally:!1,shortestPathFound:!1,foundedEndNode:[0,0],asb:!1}},computed:{filteredOpenNodes(){return this.openNodes.map(e=>e.coordinate)}},mounted(){const e=window.innerHeight,t=window.innerWidth,i=(t>1340,260);t<=767?this.gridWidth=15:t<=1024?this.gridWidth=25:t<=1340&&(this.gridWidth=30);const s=document.getElementById("grid-wrapper"),o=getComputedStyle(s),a=parseFloat(o.paddingLeft)+parseFloat(o.paddingRight),l=parseFloat(o.paddingTop)+parseFloat(o.paddingBottom),d=Math.floor((s.offsetWidth-a)/this.gridWidth),h=Math.floor((e-i-l)/d);this.nodeDimension=d,this.gridHeight=h;const r=Math.floor(this.gridWidth/2),n=Math.floor(this.gridHeight/2);W=[r+5,n],S=[r-5,n],this.initGrid()},methods:{async sidewinderMazeGenerator(){const e=await Y(this.grid,[this.gridWidth,this.gridHeight]);this.startCoordinate=e.startCoordinate,this.endCoordinate=e.endCoordinate},toggleDiagonalSearch(){this.canSearchDiagonally=!this.canSearchDiagonally},resetGrid(){this.looping=!1,this.grid=[],this.openNodes=[],this.startCoordinate=S,this.endCoordinate=W},resetAlgorithm(){this.grid.forEach(e=>{e.forEach(t=>{t.isVisited=!1,t.isPath=!1,t.weight=u,t.hWeight=0,t.gWeight=u,t.isStartNode&&this.setNode(t,"start",!0),t.isEndNode&&this.setNode(t,"end",!0)})})},setNode(e,t,i){this.resetModifierNode(e);const s=t==="start",o=s?"isStartNode":"isEndNode",a=s?"startCoordinate":"endCoordinate";e[o]=i,i&&(this[a]=e.coordinate),s&&(e.weight=i?0:u,e.gWeight=i?0:u,e.parentNode=i?this.startCoordinate:[0,0])},mouseDownNode(e){(e.isStartNode||e.isEndNode)&&(this.mouseHoldedNode=e.isStartNode?"start":"end")},mouseUpNode(e){(e.isStartNode||e.isEndNode)&&(this.mouseHoldedNode=null)},resetModifierNode(e,t){const i=["isWall","isWeightNode"];for(const s of i)s!==t&&(e[s]=!1)},setModifier(e,t="isWall"){e.isStartNode||e.isEndNode||this.mouseHoldedNode||(this.resetModifierNode(e,t),e[t]=!e[t])},initGrid(){this.resetGrid();for(let e=0;e<this.gridHeight;e++){const t=[];for(let i=0;i<this.gridWidth;i++)t.push({...JSON.parse(JSON.stringify(this.nodeTemplate)),coordinate:[i,e],coordinateX:i,coordinateY:e,isStartNode:i===this.startCoordinate[0]&&e===this.startCoordinate[1],isEndNode:i===this.endCoordinate[0]&&e===this.endCoordinate[1],weight:i===this.startCoordinate[0]&&e===this.startCoordinate[1]?0:u,parentNode:i===this.startCoordinate[0]&&e===this.startCoordinate[1]?this.startCoordinate:[0,0]});this.grid.push(t)}},upSideCoordinate(e){return[e.coordinateX,e.coordinateY-1]},rightSideCoordinate(e){return[e.coordinateX+1,e.coordinateY]},downSideCoordinate(e){return[e.coordinateX,e.coordinateY+1]},leftSideCoordinate(e){return[e.coordinateX-1,e.coordinateY]},upRightSideCoordinate(e){return[e.coordinateX+1,e.coordinateY-1]},downRightSideCoordinate(e){return[e.coordinateX+1,e.coordinateY+1]},downLeftSideCoordinate(e){return[e.coordinateX-1,e.coordinateY+1]},upLeftSideCoordinate(e){return[e.coordinateX-1,e.coordinateY-1]},checkNodeInsideGrid(e){return!(e[0]<0||e[0]>=this.gridWidth||e[1]<0||e[1]>=this.gridHeight)},async checkNode(e,t,i){if(!this.looping||i&&!this.canSearchDiagonally)return;if(!this.checkNodeInsideGrid(t))return null;const s=this.grid[t[1]][t[0]];if(s===void 0||s.isWall||s.isStartNode===!0)return null;let o=0;if(o=e.gWeight+this.distanceWeight+s.hWeight,i&&(o=e.gWeight+this.diagonalDistanceWeight+s.hWeight),s.isWeightNode&&(o+=100),!(o>=s.weight))return s.parentNode=e.coordinate,s.weight=o,s.gWeight=o-s.hWeight,s.isEndNode&&(this.looping=!1,this.shortestPathFound=!0,this.foundedEndNode=s.coordinate),this.shortestPathFound||this.pushOpenNode(s),await f(10),!0},async pushOpenNode(e){for(const[t,i]of this.openNodes.entries())if(i.weight>e.weight){this.openNodes.splice(t,0,e);return}this.openNodes.push(e)},async visualizePath(e){let t=!1;const i=[];let s=e;for(;!t;)i.unshift(s),s.isStartNode&&(t=!0),s=this.grid[s.parentNode[1]][s.parentNode[0]];for(let o of i)o.isPath=!0,await f(30)},getAllDirectionOfNode(e){let t=[this.upSideCoordinate(e),this.rightSideCoordinate(e),this.downSideCoordinate(e),this.leftSideCoordinate(e)];return this.canSearchDiagonally&&(t=[...t,this.upRightSideCoordinate(e),this.downRightSideCoordinate(e),this.downLeftSideCoordinate(e),this.upLeftSideCoordinate(e)]),t},async startAlgorithm(){this.resetAlgorithm(),this.looping=!0,this.shortestPathFound=!1,await F[`${this.algorithm}StartAlgorithm`](this,{checkNode:this.checkNode,upSideCoordinate:this.upSideCoordinate,downSideCoordinate:this.downSideCoordinate,upRightSideCoordinate:this.upRightSideCoordinate,downLeftSideCoordinate:this.downLeftSideCoordinate,rightSideCoordinate:this.rightSideCoordinate,leftSideCoordinate:this.leftSideCoordinate,downRightSideCoordinate:this.downRightSideCoordinate,upLeftSideCoordinate:this.upLeftSideCoordinate,visualizePath:this.visualizePath})}},watch:{"$route.meta.algorithm"(){this.looping=!1,this.$nextTick(()=>{this.resetAlgorithm()})}}},V={id:"grid-wrapper",class:"grid-wrapper"},z=["onMousedown","onMouseover","onMouseenter","onMouseleave"];function B(e,t,i,s,o,a){const l=k("v-icon");return c(),N("div",{onMousedown:[t[1]||(t[1]=g(d=>o.isLeftMouseDown=!0,["left"])),t[3]||(t[3]=g(d=>o.isRightMouseDown=!0,["right"]))],onMouseup:[t[2]||(t[2]=g(d=>o.isLeftMouseDown=!1,["left"])),t[4]||(t[4]=g(d=>o.isRightMouseDown=!1,["right"]))],oncontextmenu:"return false;"},[H("div",V,[(c(!0),N(m,null,M(o.grid,(d,h)=>(c(),N("div",{key:h,class:"x-grid"},[(c(!0),N(m,null,M(d,r=>(c(),N("div",{key:r.coordinate,class:D(["node-element",[{"start-node":r.isStartNode,"end-node":r.isEndNode,"weight-node":r.isWeightNode,"visited-node":r.isVisited,"path-node":r.isPath,"wall-node":r.isWall,"open-node":!r.isVisited&&r.weight!==0&&r.weight<1e6}]]),style:P({width:o.nodeDimension+"px",height:o.nodeDimension+"px"}),onMousedown:[g(n=>{a.mouseDownNode(r),a.setModifier(r,"isWall")},["left"]),g(n=>a.setModifier(r,"isWeightNode"),["right"])],onMouseup:t[0]||(t[0]=g(n=>o.mouseHoldedNode=null,["left"])),onMouseover:n=>{o.isLeftMouseDown===!0&&a.setModifier(r,"isWall"),o.isRightMouseDown===!0&&a.setModifier(r,"isWeightNode")},onMouseenter:n=>o.mouseHoldedNode&&a.setNode(r,o.mouseHoldedNode,!0),onMouseleave:n=>(r.isStartNode||r.isEndNode)&&o.mouseHoldedNode&&a.setNode(r,r.isStartNode?"start":"end",!1)},[r.isStartNode?(c(),w(l,{key:0,name:"gi-caveman",class:"pointer-event-none icon-start-node"})):C("",!0),r.isEndNode?(c(),w(l,{key:1,name:"gi-deer-head",class:"pointer-event-none icon-start-node"})):C("",!0),r.isWeightNode?(c(),w(l,{key:2,name:"bi-tree-fill",class:"pointer-event-none icon-start-node"})):C("",!0)],46,z))),128))]))),128))])],32)}const b=E(X,[["render",B],["__scopeId","data-v-45df3dfd"]]);export{b as default};
